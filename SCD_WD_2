<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stopwatch</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>

    <div class="stopwatch-container">
        <h1>Stopwatch</h1>
        <div id="display">00:00:00</div>
        <div class="controls">
            <button id="startBtn">Start</button>
            <button id="stopBtn" disabled>Stop</button>
            <button id="resetBtn" disabled>Reset</button>
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>
Style.CSS               



body {
    margin: 0;
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f0f0f0;
}

.stopwatch-container {
    text-align: center;
    background-color: #fff;
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

#display {
    font-size: 48px;
    margin-bottom: 20px;
}

.controls button {
    margin: 5px;
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
}

button:disabled {
    background-color: #ccc;
    cursor: not-allowed;
}
Script.js                                         

let startTime;
let elapsedTime = 0;
let timerInterval;

// Function to format time as hh:mm:ss
function timeToString(time) {
    let hours = Math.floor(time / 3600000);
    let minutes = Math.floor((time % 3600000) / 60000);
    let seconds = Math.floor((time % 60000) / 1000);

    let formattedHours = hours.toString().padStart(2, '0');
    let formattedMinutes = minutes.toString().padStart(2, '0');
    let formattedSeconds = seconds.toString().padStart(2, '0');

    return ${formattedHours}:${formattedMinutes}:${formattedSeconds};
}

// Function to display time
function displayTime() {
    elapsedTime = Date.now() - startTime;
    document.getElementById('display').innerHTML = timeToString(elapsedTime);
}

// Start the stopwatch
function startStopwatch() {
    startTime = Date.now() - elapsedTime;
    timerInterval = setInterval(displayTime, 1000);
    document.getElementById('startBtn').disabled = true;
    document.getElementById('stopBtn').disabled = false;
    document.getElementById('resetBtn').disabled = false;
}

// Stop the stopwatch
function stopStopwatch() {
    clearInterval(timerInterval);
    document.getElementById('startBtn').disabled = false;
    document.getElementById('stopBtn').disabled = true;
}

// Reset the stopwatch
function resetStopwatch() {
    clearInterval(timerInterval);
    elapsedTime = 0;
    document.getElementById('display').innerHTML = "00:00:00";
    document.getElementById('startBtn').disabled = false;
    document.getElementById('stopBtn').disabled = true;
    document.getElementById('resetBtn').disabled = true;
}

// Event listeners for buttons
document.getElementById('startBtn').addEventListener('click', startStopwatch);
document.getElementById('stopBtn').addEventListener('click', stopStopwatch);
document.getElementById('resetBtn').addEventListener('click', resetStopwatch);
